# Copyright (c) 2012, Johnny C. Lam
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#############
# patchdist #
#############

pecan_action_registry="${pecan_action_registry} patchdist"

pecan_patchdist_vars()
{
	pecan_patchdist_cookie="${pecan_workdir}/.patchdist_cookie"
	pecan_patchdist_require="extract"

	for _pb_patchdist_file in "${pecan_topdir}"/patchdist-*; do
		[ "${_pb_patchdist_file}" != "${pecan_topdir}/patchdist-*" ] || break
		_pecan_tools_add_prereq build patch
		break
	done
}

pecan_patchdist_default()
{
	( cd "${pecan_srcdir}" &&
	  for _pb_patchdist_file in "${pecan_topdir}"/patchdist-*; do
		[ "${_pb_patchdist_file}" != "${pecan_topdir}/patchdist-*" ] || break
		patch < "${_pb_patchdist_file}"
	  done )
}

pecan_do_patchdist()
{
	pecan_action_generator patchdist
}

#########
# patch #
#########

pecan_action_registry="${pecan_action_registry} patch"

pecan_patch_vars()
{
	pecan_patch_cookie="${pecan_workdir}/.patch_cookie"
	pecan_patch_require="patchdist"

	for _pb_patch_file in "${pecan_topdir}"/patch-*; do
		[ "${_pb_patch_file}" != "${pecan_topdir}/patch-*" ] || break
		_pecan_tools_add_prereq build patch
		break
	done
}

pecan_patch_default()
{
	( cd "${pecan_srcdir}" &&
	  for _pb_patch_file in "${pecan_topdir}"/patch-*; do
		[ "${_pb_patch_file}" != "${pecan_topdir}/patch-*" ] || break
		patch -p0 < "${_pb_patch_file}"
	  done )
}

pecan_do_patch()
{
	pecan_action_generator patch
}
