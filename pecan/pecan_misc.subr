# Copyright (c) 2012, Johnny C. Lam
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#########
# clean #
#########

pecan_action_registry="${pecan_action_registry} clean"

pecan_clean_default()
{
	rm -fr ${pecan_workdir}
}

pecan_do_clean()
{
	pecan_action_generator clean
}

#############
# distclean #
#############

pecan_action_registry="${pecan_action_registry} distclean"

pecan_distclean_vars()
{
	pecan_distclean_require="clean"
}

pecan_distclean_default()
{
	( cd "${PECAN_DISTDIR}" &&
	  _pb_distclean_file= &&
	  for _pb_distclean_url in ${pecan_fetch_file_url}; do
		if [ -z "${_pb_distclean_file}" ]; then
                        _pb_distclean_file="${_pb_distclean_url}"
                        continue
                fi
		if [ -f "./${_pb_distclean_file}" ]; then
			pecan_msg "removing ${PECAN_DISTDIR}/${_pb_distclean_file}"
			rm -f "./${_pb_distclean_file}"
		fi
                _pb_distclean_file=
          done &&
	  for _pb_distclean_file in ${pecan_fetch_file}; do
		if [ -f "./${_pb_distclean_file}" ]; then
			pecan_msg "removing ${PECAN_DISTDIR}/${_pb_distclean_file}"
			rm -f "./${_pb_distclean_file}"
		fi
	  done )
}

pecan_do_distclean()
{
	pecan_action_generator distclean
}

#########
# debug #
#########

pecan_action_registry="${pecan_action_registry} debug"

pecan_do_debug()
{
	for varname in			\
		PATH			\
		PECAN_PKGNAME		\
		PECAN_PLATFORM		\
		PECAN_SOURCE		\
		PECAN_TARGET		\
		pecan_action_registry	\
		pecan_build_style	\
		pecan_build_target	\
		pecan_build_version	\
		pecan_configure_shell	\
		pecan_configure_style	\
		pecan_cppflags		\
		pecan_fetch_file	\
		pecan_fetch_url		\
		pecan_install_args	\
		pecan_install_style	\
		pecan_install_target	\
		pecan_ldflags		\
		pecan_pkgname		\
		pecan_pkgver		\
		pecan_srcdir		\
		pecan_swver		\
		pecan_test_style	\
		pecan_test_target	\
		pecan_topdir		\

	do
		eval echo "${varname}: \$${varname}"
	done
}

########
# info #
########

pecan_action_registry="${pecan_action_registry} info"

pecan_do_info()
{
	echo "Name: ${PECAN_PKGNAME}"
	echo "Description: ${pecan_description}"
}

########
# lint #
########

pecan_action_registry="${pecan_action_registry} lint"

pecan_do_lint()
{
	[ -n "${pecan_description}" ] ||
		pecan_msg "\`pecan_description' should be defined."
}
